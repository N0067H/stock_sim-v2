<!DOCTYPE html>
<html>

<head>
  <title>Document</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      user-select: none;
    }

    .chat {
      display: flex;
      flex-direction: column;
      width: 330px;
      height: 360px;
      border: 2px solid lightgray;
      border-top: 25px solid lightgray;
      border-radius: 10px;
      position: absolute;
      cursor: default;
      background-color: white;
    }

    #dragArea {
      position: relative;
      top: -25px;
      width: 100%;
      height: 25px;
      border-radius: 10px;
      cursor: grab;
    }

    .chatTitle {
      position: absolute;
      top: -19px;
      left: 10px;
      font-size: 10px;
    }

    .closeButton {
      position: relative;
      width: 9px;
      top: -40px;
      margin-left: auto;
      margin-right: 7px;
      z-index: 1;
    }

    .closeButton:hover {
      cursor: pointer;
    }

    .chatArea {
      width: 100%;
      height: 80%;
      margin-top: auto;
      overflow-y: auto;
    }

    .inputArea {
      display: flex;
      align-items: center;
      height: 10%;
      padding: 1% 0 1% 1%;
    }

    .message {
      width: 80%;
      height: 80%;
      padding: 0 10px;
      margin-right: 1%;
      border-radius: 10px;
      font-size: 75%;
      border: 1px solid lightgray;
    }

    .submit {
      width: 15%;
      height: 86.275%;
      margin-left: auto;
      margin-right: 1%;
      border: 0;
      border-radius: 10px;
      background-color: #007bff;
      font-size: 70%;
      color: white;
      transition: background-color 0.3s;
    }

    .submit:hover {
      background-color: #0056b3;
    }

    .resize {
      position: absolute;
      bottom: 0;
      right: 0;
      width: 10px;
      height: 10px;
      cursor: nwse-resize;
      background: lightgray;
      border-radius: 50%;
    }
  </style>
</head>

<body>
  <div class="chat" id="chatContainer">
    <span class="chatTitle">마늘 투자 증권 채팅 v2.0.0.0.0.0.0.0.1</span>
    <div id="dragArea"></div>
    <img src="https://i.ibb.co/Mk07b4V/black-x-mark-10351.png" alt="닫기" class="closeButton" id="closeButton">
    <div class="chatArea" id="chatArea"></div>
    <hr class="inputBorder">
    <form class="inputArea" id="inputForm" onsubmit="return false;">
      <input type="text" class="message" id="messageInput" placeholder="메시지를 입력하세요">
      <input type="button" class="submit" id="sendButton" value="전송">
    </form>
    <div class="resize" id="resizeHandle"></div>
  </div>

  <script>
    const draggable = document.getElementById('dragArea');
    const chatContainer = document.getElementById('chatContainer');
    const resizeHandle = document.getElementById('resizeHandle');
    const sendButton = document.getElementById('sendButton');
    const messageInput = document.getElementById('messageInput');
    const chatArea = document.getElementById('chatArea');
    const closeButton = document.getElementById('closeButton');
    const inputForm = document.getElementById('inputForm');
  
    let isDragging = false;
    let isResizing = false;
    let offsetX, offsetY, width, height;
  
    // 드래그 기능
    draggable.addEventListener('mousedown', (e) => {
      isDragging = true;
      offsetX = e.clientX - chatContainer.getBoundingClientRect().left;
      offsetY = e.clientY - chatContainer.getBoundingClientRect().top;
      draggable.style.cursor = 'grabbing';
    });
  
    // 리사이즈 기능
    resizeHandle.addEventListener('mousedown', (e) => {
      isResizing = true;
      width = chatContainer.offsetWidth;
      height = chatContainer.offsetHeight;
      e.preventDefault();
    });
  
    // 메시지 전송 함수
    function sendMessage() {
      const message = messageInput.value.trim();
      if (message) {
        const messageDiv = document.createElement('div');
        messageDiv.textContent = message;
        chatArea.appendChild(messageDiv);
        messageInput.value = '';
        chatArea.scrollTop = chatArea.scrollHeight; // 자동 스크롤
      }
    }
  
    // 닫기 버튼
    closeButton.addEventListener('click', () => {
      chatContainer.style.visibility = 'hidden';
    });
  
    // 마우스 이동 이벤트
    document.addEventListener('mousemove', (e) => {
      if (isDragging) {
        chatContainer.style.left = `${e.clientX - offsetX}px`;
        chatContainer.style.top = `${e.clientY - offsetY}px`;
      }
  
      if (isResizing) {
        const resizeMinVertical = 250;
        const resizeMinHorizontal = 225;
        chatContainer.style.width = `${Math.max(resizeMinHorizontal, e.clientX - chatContainer.getBoundingClientRect().left)}px`;
        chatContainer.style.height = `${Math.max(resizeMinVertical, e.clientY - chatContainer.getBoundingClientRect().top)}px`;
      }
    });
  
    // 마우스 버튼 해제 이벤트
    document.addEventListener('mouseup', () => {
      isDragging = false;
      isResizing = false;
      draggable.style.cursor = 'grab';
    });
  </script>
</body>

</html>
